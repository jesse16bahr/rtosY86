; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
	ALIGN	2
resetHandler:
	; >>>>> Line:	7
	; >>>>> void resetHandler(){ 
	jmp	L_myinth_1
L_myinth_2:
	; >>>>> Line:	8
	; >>>>> exit(0); 
	xor	al, al
	push	ax
	call	exit
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_myinth_1:
	push	bp
	mov	bp, sp
	jmp	L_myinth_2
L_myinth_4:
	DB	"TICK  ",0
	ALIGN	2
tickHandler:
	; >>>>> Line:	11
	; >>>>> void tickHandler(){ 
	jmp	L_myinth_5
L_myinth_6:
	; >>>>> Line:	12
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	13
	; >>>>> printString("TICK  "); 
	mov	ax, L_myinth_4
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	14
	; >>>>> printInt(tickNumber); 
	push	word [tickNumber]
	call	printInt
	add	sp, 2
	; >>>>> Line:	15
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	16
	; >>>>> tickNumber++; 
	inc	word [tickNumber]
	mov	sp, bp
	pop	bp
	ret
L_myinth_5:
	push	bp
	mov	bp, sp
	jmp	L_myinth_6
L_myinth_11:
	DB	" IGNORED",0
L_myinth_10:
	DB	"KEYPRESS ",0
L_myinth_9:
	DB	"DELAY COMPLETE",0
L_myinth_8:
	DB	"DELAY KEY PRESSED",0
	ALIGN	2
keyboardHandler:
	; >>>>> Line:	21
	; >>>>> void keyboardHandler(){ 
	jmp	L_myinth_12
L_myinth_13:
	; >>>>> Line:	24
	; >>>>> if(KeyBuffer == 'd'){ 
	cmp	word [KeyBuffer], 100
	jne	L_myinth_14
	; >>>>> Line:	25
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	26
	; >>>>> printString("DELAY KEY PRESSED"); 
	mov	ax, L_myinth_8
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	27
	; >>>>> i = 0; 
	mov	word [bp-2], 0
	; >>>>> Line:	28
	; >>>>> while(i < 6000){ 
	jmp	L_myinth_16
L_myinth_15:
	; >>>>> Line:	29
	; >>>>> i++; 
	inc	word [bp-2]
L_myinth_16:
	cmp	word [bp-2], 6000
	jl	L_myinth_15
L_myinth_17:
	; >>>>> Line:	31
	; >>>>> printString("DELAY COMPLETE"); 
	mov	ax, L_myinth_9
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	32
	; >>>>> printNewLine(); 
	call	printNewLine
L_myinth_14:
	; >>>>> Line:	35
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	36
	; >>>>> printString("KEYPRESS "); 
	mov	ax, L_myinth_10
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	37
	; >>>>> printChar(KeyBuffer); 
	push	word [KeyBuffer]
	call	printChar
	add	sp, 2
	; >>>>> Line:	38
	; >>>>> printString(" IGNORED"); 
	mov	ax, L_myinth_11
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	39
	; >>>>> printNewLine(); 
	call	printNewLine
	mov	sp, bp
	pop	bp
	ret
L_myinth_12:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_myinth_13
	ALIGN	2
tickNumber:
	TIMES	2 db 0
